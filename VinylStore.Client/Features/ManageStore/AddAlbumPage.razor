@page "/add-album"
@inject IMediator Mediator

<PageTitle>Add Album - Vinyl Store</PageTitle>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Album</li>
    </ol>
</nav>

<h3 class="mt-5 mb-4">Add a album</h3>

@if (_sumbitSuccessful)
{
    <div class="alert alert-success" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </svg>
        Your trail has been submitted successfully!
    </div>
}
else if (_errorMessage is not null)
{
    <div class="alert alert-danger" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
        </svg>
        @_errorMessage
    </div>
}

<EditForm Model="_album" OnValidSubmit="SubmitForm">
    <FluentValidationValidator />

    @if (_isLoading)
    {
        <div class="d-flex justify-content-center my-3">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }

    <FormSection Title="Basic Details"
    HelpText="This information is used to identity the album and can be searched to help hikers find it.">

        <FormFieldSet Width="col-6">
            <label for="albumName" class="font-weight-bold text-secondary">Name</label>
            <InputText @bind-Value="_album.Name" class="form-control" id="albumName" />
            <ValidationMessage For="@(() => _album.Name)" />
        </FormFieldSet>

        <FormFieldSet>
            <label for="albumDescription" class="font-weight-bold text-secondary">Description</label>
            <InputText @bind-Value="_album.Description" rows="6" class="form-control" id="albumDescription" />
            <ValidationMessage For="@(() => _album.Description)" />
        </FormFieldSet>

        <FormFieldSet Width="col-6">
            <label for="albumAuthorName" class="font-weight-bold text-secondary">Author Name</label>
            <InputText @bind-Value="_album.AuthorName" class="form-control" id="albumAuthorName" />
            <ValidationMessage For="@(() => _album.AuthorName)" />
        </FormFieldSet>

    </FormSection>

    <FormSection Title="Difficulty"
    HelpText="Help other hikers out by telling them the length of the trail is how long it might take them.">

        <FormFieldSet Width="col-3">
            <label for="albumTime" class="font-weight-bold text-secondary">Time (h)</label>
            <InputNumber @bind-Value="_album.TimeInMinutes" class="form-control" id="albumTime" />
            <ValidationMessage For="@(() => _album.TimeInMinutes)" />
        </FormFieldSet>

    </FormSection>

    <FormSection Title="Song Information"
    HelpText="Song instructions are a guide for the song. This helps hikers new to the trail stay on song.">
        @{
            var i = 0;
        }
        @foreach (var song in _album.Songs)
        {
            i++;
            <div class="row">
                <div class="col-2">
                    <div class="form-group">
                        <label class="font-weight-bold text-secondary">Song</label>
                        <p>@i</p>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="songTitle" class="font-weight-bold text-secondary">Song Title</label>
                        <InputText @bind-Value="song.Name" class="form-control" id="songTitle" />
                        <ValidationMessage For="@(() => song.Name)" />
                    </div>
                </div>
                <div class="col-1 d-flex mt-3">
                    <button @onclick="@(() => _album.Songs.Remove(song))" class="btn btn-link" type="button">
                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-circle-fill text-danger" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
                        </svg>
                    </button>
                </div>
            </div>
        }

        <div class="row">
            <div class="col">
                <button class="btn btn-outline-primary" type="button" @onclick="@(() => _album.Songs.Add(new AlbumDto.Song()))">Add Song</button>
                <ValidationMessage For="@(() => _album.Songs)" />
            </div>
        </div>
    </FormSection>

    <div class="mt-4 mb-5">
        <div class="offset-4 col-8 text-right">
            <button class="btn btn-outline-secondary" type="button" @onclick="@(() => _album = new AlbumDto())">Reset</button>
            <button class="btn btn-primary" type="submit">Submit</button>
        </div>
    </div>
</EditForm>

@code {
    private AlbumDto _album = new AlbumDto();
    private bool _sumbitSuccessful;
    private string? _errorMessage;
    private bool _isLoading;

    public List<Song> Songs { get; set; } = new List<Song>();

    private async Task SubmitForm()
    {
        try
        {
            _isLoading = true;
            Console.WriteLine("Submit started");
            Console.WriteLine($"Album data: Name={_album.Name}, Author={_album.AuthorName}, Songs count={_album.Songs?.Count}");

            var response = await Mediator.Send(new AddAlbumRequest(_album));
            Console.WriteLine($"Response received: {response?.AlbumId}");

            if (response?.AlbumId == -1)
            {
                _errorMessage = "There was a problem saving your album.";
                _sumbitSuccessful = false;
                return;
            }

            _album = new AlbumDto()
                {
                    Songs = new List<AlbumDto.Song>()
                };
            _errorMessage = null;
            _sumbitSuccessful = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error in SubmitForm: {ex.Message}");
            Console.WriteLine($"Stack trace: {ex.StackTrace}");
            _errorMessage = $"Error occurred: {ex.Message}";
            _sumbitSuccessful = false;
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        // Убедимся, что Songs инициализирован
        if (_album.Songs == null)
        {
            _album.Songs = new List<AlbumDto.Song>();
        }
    }
}